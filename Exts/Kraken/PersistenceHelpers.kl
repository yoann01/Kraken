require FTL;

/// \dfgPresetOmit
function Vec3 vec3FromJSON(FTL_JSONObject decoder){
    Vec3 value;
    value.x = Float32(decoder.getFloat64('x'));
    value.y = Float32(decoder.getFloat64('y'));
    value.z = Float32(decoder.getFloat64('z'));
    return value;
}

/// \dfgPresetOmit
function vec3ToJSON(Vec3 value, io FTL_JSONObjectEncoder encoder){
    encoder.setFloat64('x', value.x);
    encoder.setFloat64('y', value.y);
    encoder.setFloat64('z', value.z);
}

/// \dfgPresetOmit
function Quat quatFromJSON(FTL_JSONObject decoder){
    Quat value;
    value.v.x = Float32(decoder.getFloat64('x'));
    value.v.y = Float32(decoder.getFloat64('y'));
    value.v.z = Float32(decoder.getFloat64('z'));
    value.w = Float32(decoder.getFloat64('w'));
    return value;
}

/// \dfgPresetOmit
function quatToJSON(Quat value, io FTL_JSONObjectEncoder encoder){
    encoder.setFloat64('x', value.v.x);
    encoder.setFloat64('y', value.v.y);
    encoder.setFloat64('z', value.v.z);
    encoder.setFloat64('w', value.w);
}

/// \dfgPresetOmit
function xfoToJSON(Xfo value, io FTL_JSONObjectEncoder encoder) {
    {
        FTL_JSONObjectEncoder trEncoder = encoder.setObject('tr');
        vec3ToJSON(value.tr, trEncoder);
      }
    {
        FTL_JSONObjectEncoder scEncoder = encoder.setObject('sc');
        vec3ToJSON(value.sc, scEncoder);
      }
    {
        FTL_JSONObjectEncoder oriEncoder = encoder.setObject('ori');
        quatToJSON(value.ori, oriEncoder);
    }
}

/// \dfgPresetOmit
function Xfo xfoFromJSON(FTL_JSONObject decoder) {
    Xfo value;
    value.tr = vec3FromJSON(decoder.getObject('tr'));
    value.sc = vec3FromJSON(decoder.getObject('sc'));
    value.ori = quatFromJSON(decoder.getObject('ori'));
    return value;
}
